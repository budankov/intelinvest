{"version":3,"file":"static/js/30.62cdac06.chunk.js","mappings":"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","sources":["webpack://intelinvest/./src/components/ChartWrapper/ChartWrapper.module.scss?9d0c","components/ChartWrapper/ChartWrapper.jsx","webpack://intelinvest/./src/components/AnalyticsDashboard/AnalyticsDashboard.module.scss?5130","components/AnalyticsDashboard/AnalyticsDashboard.jsx","webpack://intelinvest/./src/shared/components/PieChartExample/PieChartExample.module.scss?99aa","shared/components/PieChartExample/PieChartExample.jsx","shared/components/AreaChartExample/AreaChartExample.module.scss","shared/components/AreaChartExample/AreaChartExample.jsx","webpack://intelinvest/./src/shared/components/BarChartExample/BarChartExample.module.scss?a1cb","shared/components/BarChartExample/BarChartExample.jsx","webpack://intelinvest/./src/components/AnalyticsDashboardWrapper/AnalyticsDashboardWrapper.module.scss?0ad9","components/AnalyticsDashboardWrapper/AnalyticsDashboardWrapper.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chartWrapper__container\":\"ChartWrapper_chartWrapper__container__58pOl\"};","import styles from './ChartWrapper.module.scss'\n\nconst ChartWrapper = ({ children }) => {\n    return (\n        <div className={styles.chartWrapper__container}>{children}</div>\n    )\n};\n\nexport default ChartWrapper;","// extracted by mini-css-extract-plugin\nexport default {\"analyticsDashboard\":\"AnalyticsDashboard_analyticsDashboard__gJ1BH\",\"analyticsDashboard__title\":\"AnalyticsDashboard_analyticsDashboard__title__I7g4G\",\"analyticsDashboard__value\":\"AnalyticsDashboard_analyticsDashboard__value__8o8BS\"};","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectExchangeRate } from 'redux/currencyConverter/currencyConverterSlice';\nimport { fetchStockPrice } from 'redux/stockSuggestions/stockSuggestionsOperations';\n\nimport ChartWrapper from \"components/ChartWrapper/ChartWrapper\";\n\nimport styles from './AnalyticsDashboard.module.scss'\n\nconst AnalyticsDashboard = () => {\n    const [stockPrices, setStockPrices] = useState({});\n\n    const stocks = useSelector(state => state.stocks.stocks);\n    const exchangeRate = useSelector(selectExchangeRate);\n    const selectedCurrency = useSelector(state => state.selectedCurrency.value);\n    const currentCurrency = selectedCurrency ? selectedCurrency : 'USD';\n\n    const dispatch = useDispatch();\n\n    const currencySymbols = useMemo(() => ({\n        USD: '$',\n        EUR: '€',\n        GBP: '£',\n        UAH: '₴'\n    }), []);\n\n    const handleGetPrice = useCallback(async (symbol) => {\n        try {\n            const response = await dispatch(fetchStockPrice(symbol));\n            const price = response.payload;\n            if (price !== null) {\n                setStockPrices((prevPrices) => ({\n                    ...prevPrices,\n                    [symbol]: price,\n                }));\n            }\n        } catch (error) {\n            console.log(`Error getting stock price for ${symbol}:`, error.message);\n        }\n    }, [dispatch, setStockPrices]);\n\n    useEffect(() => {\n        stocks.forEach(({ name }) => {\n            handleGetPrice(name);\n        });\n    }, [stocks, handleGetPrice]);\n\n    const calculateRowValues = useCallback((name, price, quantity) => {\n        const totalPositionValue = (quantity * price).toFixed(2);\n        const currentStockPrice = stockPrices[name] !== undefined ? stockPrices[name] : 0;\n        const currentTotalPositionValue = (quantity * currentStockPrice).toFixed(2);\n        const profitability = (currentTotalPositionValue - totalPositionValue).toFixed(2);\n        const profitabilityPercentage = ((profitability / totalPositionValue) * 100).toFixed(2);\n\n        return {\n            totalPositionValue,\n            currentStockPrice,\n            currentTotalPositionValue,\n            profitability,\n            profitabilityPercentage,\n        };\n    }, [stockPrices]);\n\n    const calculateStocksSummary = useCallback(() => {\n        let totalCurrentValue = 0;\n        let totalProfitability = 0;\n        let totalPositionValue = 0;\n        let bestStock = {\n            name: '',\n            percentage: 0,\n        };\n\n        stocks.forEach(({ name, price, quantity }) => {\n            const {\n                totalPositionValue: rowTotalPositionValue,\n                currentTotalPositionValue,\n                profitability,\n                profitabilityPercentage,\n            } = calculateRowValues(name, price, quantity);\n\n            totalCurrentValue += parseFloat(currentTotalPositionValue);\n            totalProfitability += parseFloat(profitability);\n            totalPositionValue += parseFloat(rowTotalPositionValue);\n\n            if (parseFloat(profitabilityPercentage) > bestStock.percentage) {\n                bestStock = {\n                    name,\n                    percentage: parseFloat(profitabilityPercentage),\n                };\n            }\n        });\n\n        const totalProfitabilityPercentage = ((totalProfitability / totalPositionValue) * 100).toFixed(2);\n\n        return {\n            totalCurrentValue,\n            totalProfitability,\n            totalProfitabilityPercentage,\n            bestStock,\n        };\n    }, [stocks, calculateRowValues]);\n\n    const {\n        totalCurrentValue,\n        totalProfitability,\n        totalProfitabilityPercentage,\n        bestStock,\n    } = calculateStocksSummary();\n\n    return (\n        <div className={styles.analyticsDashboard}>\n            <ChartWrapper>\n                <div>\n                    <p className={styles.analyticsDashboard__title}>Вартість портфелю</p>\n                    <p className={styles.analyticsDashboard__value}>{(totalCurrentValue * exchangeRate).toFixed(2)}{currencySymbols[currentCurrency]}</p>\n                </div>\n            </ChartWrapper>\n            <ChartWrapper>\n                <div>\n                    <p className={styles.analyticsDashboard__title}>Сумарний прибуток</p>\n                    <p className={styles.analyticsDashboard__value}>{(totalProfitability * exchangeRate).toFixed(2)}{currencySymbols[currentCurrency]}</p>\n                </div>\n            </ChartWrapper>\n            <ChartWrapper>\n                <div>\n                    <p className={styles.analyticsDashboard__title}>Дохідність</p>\n                    <p className={styles.analyticsDashboard__value}>{totalProfitabilityPercentage}%</p>\n                </div>\n            </ChartWrapper>\n            <ChartWrapper>\n                <div>\n                    <p className={styles.analyticsDashboard__title}>Кращий актив</p>\n                    <p className={styles.analyticsDashboard__value}>{bestStock.name}: {bestStock.percentage}%</p>\n                </div>\n            </ChartWrapper>\n        </div>\n    );\n}\n\nexport default AnalyticsDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"pieChart__wrapper\":\"PieChartExample_pieChart__wrapper__FKwjq\",\"title\":\"PieChartExample_title__ukaPr\",\"legendList\":\"PieChartExample_legendList__3EZKa\"};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchStocks } from 'redux/stocks/opetations';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Sector, Legend } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeSet2 } from 'd3-scale-chromatic';\n\nimport styles from './PieChartExample.module.scss'\n\nconst PieChartExample = () => {\n    const [activeIndex, setActiveIndex] = useState(null);\n    const [chartRadius, setChartRadius] = useState({ innerRadius: 60, outerRadius: 100 });\n    const [legendStyles, setLegendStyles] = useState({ align: 'right', verticalAlign: 'middle', wrapperStyle: { paddingRight: '200px' } });\n\n    useEffect(() => {\n        const handleResize = () => {\n            const isMobile = window.innerWidth < 768;\n            setChartRadius(isMobile ? { innerRadius: 40, outerRadius: 70 } : { innerRadius: 60, outerRadius: 100 });\n            setLegendStyles(isMobile\n                ? {\n                    align: 'center', verticalAlign: 'bottom', wrapperStyle: { paddingRight: '10px' }\n                }\n                : {\n                    align: 'right', verticalAlign: 'middle', wrapperStyle: { paddingRight: '200px' }\n                });\n        };\n\n        handleResize();\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchStocks());\n    }, [dispatch]);\n\n    const fetchedStocks = useSelector(state => state.stocks.stocks);\n\n    const totalSumOfPositions = fetchedStocks.reduce((total, stock) => {\n        const { price, quantity } = stock;\n        return total + price * quantity;\n    }, 0);\n\n    const pieChartData = fetchedStocks.map(stock => ({\n        name: stock.name,\n        value: (stock.price * stock.quantity) / totalSumOfPositions,\n    }));\n\n    const colorScale = scaleOrdinal(schemeSet2);\n\n    const renderActiveShape = (props) => {\n        const RADIAN = Math.PI / 180;\n        const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n            fill, payload, percent, value } = props;\n        const sin = Math.sin(-RADIAN * midAngle);\n        const cos = Math.cos(-RADIAN * midAngle);\n        const sx = cx + (outerRadius + 10) * cos;\n        const sy = cy + (outerRadius + 10) * sin;\n        const mx = cx + (outerRadius + 30) * cos;\n        const my = cy + (outerRadius + 30) * sin;\n        const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n        const ey = my;\n        const textAnchor = cos >= 0 ? 'start' : 'end';\n\n        return (\n            <g>\n                <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n                    {payload.name}\n                </text>\n                <Sector\n                    cx={cx}\n                    cy={cy}\n                    innerRadius={innerRadius}\n                    outerRadius={outerRadius}\n                    startAngle={startAngle}\n                    endAngle={endAngle}\n                    fill={fill}\n                />\n                <Sector\n                    cx={cx}\n                    cy={cy}\n                    startAngle={startAngle}\n                    endAngle={endAngle}\n                    innerRadius={outerRadius + 6}\n                    outerRadius={outerRadius + 10}\n                    fill={fill}\n                />\n                <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n                <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n                <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${(percent * 100).toFixed(2)}%`}</text>\n                <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill={fill}>\n                    <tspan>{`${(value * 100).toFixed(0)}%`}</tspan>\n                    <tspan x={ex + (cos >= 0 ? 1 : -1) * 12} dy={18}>{`$${(value * totalSumOfPositions).toFixed(2)}`}</tspan>\n                </text>\n            </g>\n        );\n    };\n\n    return (\n        <div className={styles.pieChart__wrapper}>\n            <h3 className={styles.title}>Склад портфелю по активам</h3>\n            {/* <ResponsiveContainer width=\"100%\" height={200}> */}\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                    <Pie\n                        data={pieChartData}\n                        labelLine={false}\n                        innerRadius={chartRadius.innerRadius}\n                        outerRadius={chartRadius.outerRadius}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        activeIndex={activeIndex}\n                        activeShape={(props) => renderActiveShape(props)}\n                        onMouseEnter={(data, index) => setActiveIndex(index)}\n                        onMouseLeave={() => setActiveIndex(null)}\n                    >\n                        {pieChartData.map((entry, index) => (\n                            <Cell\n                                key={`cell-${index}`}\n                                fill={colorScale(index)}\n                            />\n                        ))}\n                    </Pie>\n                    <Legend\n                        content={(props) => {\n                            const { payload } = props;\n                            return (\n                                <div className={styles.legendList} >\n                                    {payload.map((entry, index) => (\n                                        <div key={`legend-item-${index}`} style={{ display: 'flex', alignItems: 'center', marginBottom: '5px', color: '#fff' }}>\n                                            <div style={{ width: '10px', height: '10px', backgroundColor: entry.color, marginRight: '10px' }}></div>\n                                            {`${entry.value} ${(entry.payload.value * 100).toFixed(0)}%`}\n                                        </div>\n                                    ))}\n                                </div>\n                            );\n                        }}\n                        align={legendStyles.align}\n                        verticalAlign={legendStyles.verticalAlign}\n                        wrapperStyle={legendStyles.wrapperStyle}\n                        layout=\"vertical\"\n                    />\n\n                </PieChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nexport default PieChartExample;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"AreaChartExample_title__2pMJg\"};","import React from 'react';\nimport {\n    AreaChart,\n    XAxis,\n    YAxis,\n    Area,\n    Tooltip,\n    ResponsiveContainer,\n    CartesianGrid,\n} from 'recharts';\n\nimport styles from './AreaChartExample.module.scss'\n\nexport default function AreaChartExample({ data }) {\n\n    const maxPrice = Math.ceil(Math.max(...data.map(item => parseFloat(item.price))));\n\n    return (\n        <div>\n            <h3 className={styles.title}>Динаміка по активам</h3>\n            <ResponsiveContainer width=\"100%\" height={400}>\n                <AreaChart data={data} margin={{ top: 20, right: 20, left: 20, bottom: 20 }}>\n                    <defs>\n                        <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"0%\" stopColor=\"#2451B7\" stopOpacity={0.4} />\n                            <stop offset=\"75%\" stopColor=\"#2451B7\" stopOpacity={0.05} />\n                        </linearGradient>\n                    </defs>\n\n                    <Area dataKey=\"price\" stroke=\"#2451B7\" fill=\"url(#color)\" />\n\n                    <XAxis\n                        dataKey=\"name\"\n                        axisLine={false}\n                        tickLine={false}\n                        dy={10}\n                    />\n\n                    <YAxis\n                        dataKey=\"price\"\n                        axisLine={false}\n                        tickLine={false}\n                        tickCount={8}\n                        domain={[0, maxPrice]}\n                        tickFormatter={(number) => `$${Math.ceil(number)}`}\n                        dx={-10}\n                    />\n\n                    <Tooltip content={<CustomTooltip />} />\n\n                    <CartesianGrid opacity={0.1} vertical={false} />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nfunction CustomTooltip({ active, payload, label }) {\n    if (active) {\n        return (\n            <div className=\"tooltip\">\n                <h4>{label}</h4>\n                <p>${payload[0].value}</p>\n            </div>\n        );\n    }\n    return null;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"BarChartExample_title__k1rqM\"};","import {\n    BarChart,\n    XAxis,\n    YAxis,\n    Bar,\n    Tooltip,\n    ResponsiveContainer,\n} from 'recharts';\n\nimport styles from './BarChartExample.module.scss'\n\nconst BarChartExample = ({ data }) => {\n    return (\n        <div>\n            <h3 className={styles.title}>Динаміка кількості по активам</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={data}>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Bar dataKey=\"quantity\" fill=\"#8884d8\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nexport default BarChartExample;","// extracted by mini-css-extract-plugin\nexport default {\"dashboardWWrapper\":\"AnalyticsDashboardWrapper_dashboardWWrapper__3xCbu\",\"chartsWrapper\":\"AnalyticsDashboardWrapper_chartsWrapper__i833f\"};","import AnalyticsDashboard from \"components/AnalyticsDashboard/AnalyticsDashboard\";\nimport ChartWrapper from \"components/ChartWrapper/ChartWrapper\";\nimport PieChartExample from \"shared/components/PieChartExample/PieChartExample\";\nimport AreaChartExample from \"shared/components/AreaChartExample/AreaChartExample\";\nimport BarChartExample from \"shared/components/BarChartExample/BarChartExample\";\n\nimport { useSelector } from 'react-redux';\n\nimport styles from './AnalyticsDashboardWrapper.module.scss'\n\nconst AnalyticsDashboardWrapper = () => {\n    const stocks = useSelector(state => state.stocks.stocks);\n\n    return (\n        <div className={styles.dashboardWWrapper}>\n            <AnalyticsDashboard />\n            <div className={styles.chartsWrapper}>\n                <ChartWrapper>\n                    <PieChartExample />\n                </ChartWrapper>\n                <ChartWrapper>\n                    <BarChartExample data={stocks} />\n                </ChartWrapper>\n            </div>\n            <ChartWrapper>\n                <AreaChartExample data={stocks} />\n            </ChartWrapper>\n        </div>\n    )\n}\n\nexport default AnalyticsDashboardWrapper;"],"names":["_ref","children","_jsx","className","styles","_useState","useState","_useState2","_slicedToArray","stockPrices","setStockPrices","stocks","useSelector","state","exchangeRate","selectExchangeRate","selectedCurrency","value","currentCurrency","dispatch","useDispatch","currencySymbols","useMemo","USD","EUR","GBP","UAH","handleGetPrice","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","symbol","response","price","wrap","_context","prev","next","fetchStockPrice","sent","payload","prevPrices","_objectSpread","_defineProperty","t0","console","log","concat","message","stop","_x","apply","arguments","useEffect","forEach","_ref2","name","calculateRowValues","quantity","totalPositionValue","toFixed","currentStockPrice","undefined","currentTotalPositionValue","profitability","profitabilityPercentage","calculateStocksSummary","totalCurrentValue","totalProfitability","bestStock","percentage","_ref3","_calculateRowValues","rowTotalPositionValue","parseFloat","totalProfitabilityPercentage","_calculateStocksSumma","_jsxs","ChartWrapper","activeIndex","setActiveIndex","_useState3","innerRadius","outerRadius","_useState4","chartRadius","setChartRadius","_useState5","align","verticalAlign","wrapperStyle","paddingRight","_useState6","legendStyles","setLegendStyles","handleResize","isMobile","window","innerWidth","addEventListener","removeEventListener","fetchStocks","fetchedStocks","totalSumOfPositions","reduce","total","stock","pieChartData","map","colorScale","scaleOrdinal","schemeSet2","ResponsiveContainer","width","height","PieChart","Pie","data","labelLine","fill","dataKey","activeShape","props","RADIAN","Math","PI","cx","cy","midAngle","startAngle","endAngle","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","renderActiveShape","onMouseEnter","index","onMouseLeave","entry","Cell","Legend","content","style","display","alignItems","marginBottom","color","backgroundColor","marginRight","layout","AreaChartExample","maxPrice","ceil","max","_toConsumableArray","item","AreaChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","XAxis","axisLine","tickLine","YAxis","tickCount","domain","tickFormatter","number","dx","Tooltip","CustomTooltip","CartesianGrid","opacity","vertical","active","label","BarChart","Bar","AnalyticsDashboard","PieChartExample","BarChartExample"],"sourceRoot":""}