{"version":3,"file":"static/js/671.23559584.chunk.js","mappings":"yPACA,EAA0C,8C,UCO1C,EANqB,SAAHA,GAAsB,IAAhBC,EAAQD,EAARC,SACpB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA+BH,SAAEA,GAEzD,ECLA,EAAqC,+CAArC,EAAgH,sDAAhH,EAAkM,sDC0IlM,EAlI2B,WACvB,IAAAI,GAAsCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE5BI,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,OAAOA,MAAM,IACjDG,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAmBJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMG,iBAAiBC,KAAK,IACpEC,EAAkBF,GAAsC,MAExDG,GAAWC,EAAAA,EAAAA,MAEXC,GAAkBC,EAAAA,EAAAA,UAAQ,iBAAO,CACnCC,IAAK,IACLC,IAAK,SACLC,IAAK,OACLC,IAAK,SACR,GAAG,IAEEC,GAAiBC,EAAAA,EAAAA,aAAW,eAAA5B,GAAA6B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOC,GAAM,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEjBpB,GAASqB,EAAAA,EAAAA,GAAgBP,IAAS,KAAD,EAAlDC,EAAQG,EAAAI,KAEA,QADRN,EAAQD,EAASQ,UAEnBhC,GAAe,SAACiC,GAAU,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBD,GAAU,IAAAE,EAAAA,EAAAA,GAAA,GACZZ,EAASE,GAAK,IAEtBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEDU,QAAQC,IAAI,iCAADC,OAAkChB,EAAM,KAAKI,EAAAS,GAAMI,SAAS,yBAAAb,EAAAc,OAAA,GAAAnB,EAAA,kBAE9E,gBAAAoB,GAAA,OAAApD,EAAAqD,MAAA,KAAAC,UAAA,EAbiC,GAa/B,CAACnC,EAAUT,KAEd6C,EAAAA,EAAAA,YAAU,WACN5C,EAAO6C,SAAQ,SAAAC,GAAe,IAAZC,EAAID,EAAJC,KACd/B,EAAe+B,EACnB,GACJ,GAAG,CAAC/C,EAAQgB,IAEZ,IAAMgC,GAAqB/B,EAAAA,EAAAA,cAAY,SAAC8B,EAAMvB,EAAOyB,GACjD,IAAMC,GAAsBD,EAAWzB,GAAO2B,QAAQ,GAChDC,OAA0CC,IAAtBvD,EAAYiD,GAAsBjD,EAAYiD,GAAQ,EAC1EO,GAA6BL,EAAWG,GAAmBD,QAAQ,GACnEI,GAAiBD,EAA4BJ,GAAoBC,QAAQ,GAG/E,MAAO,CACHD,mBAAAA,EACAE,kBAAAA,EACAE,0BAAAA,EACAC,cAAAA,EACAC,yBAP8BD,EAAgBL,EAAsB,KAAKC,QAAQ,GASzF,GAAG,CAACrD,IAEE2D,GAAyBxC,EAAAA,EAAAA,cAAY,WACvC,IAAIyC,EAAoB,EACpBC,EAAqB,EACrBT,EAAqB,EACrBU,EAAY,CACZb,KAAM,GACNc,WAAY,GAGhB7D,EAAO6C,SAAQ,SAAAiB,GAAgC,IAA7Bf,EAAIe,EAAJf,KAAMvB,EAAKsC,EAALtC,MAAOyB,EAAQa,EAARb,SAC3Bc,EAKIf,EAAmBD,EAAMvB,EAAOyB,GAJZe,EAAqBD,EAAzCb,mBACAI,EAAyBS,EAAzBT,0BACAC,EAAaQ,EAAbR,cACAC,EAAuBO,EAAvBP,wBAGJE,GAAqBO,WAAWX,GAChCK,GAAsBM,WAAWV,GACjCL,GAAsBe,WAAWD,GAE7BC,WAAWT,GAA2BI,EAAUC,aAChDD,EAAY,CACRb,KAAAA,EACAc,WAAYI,WAAWT,IAGnC,IAEA,IAAMU,GAAiCP,EAAqBT,EAAsB,KAAKC,QAAQ,GAE/F,MAAO,CACHO,kBAAAA,EACAC,mBAAAA,EACAO,6BAAAA,EACAN,UAAAA,EAER,GAAG,CAAC5D,EAAQgD,IAEZmB,EAKIV,IAJAC,EAAiBS,EAAjBT,kBACAC,EAAkBQ,EAAlBR,mBACAO,EAA4BC,EAA5BD,6BACAN,EAASO,EAATP,UAGJ,OACIQ,EAAAA,EAAAA,MAAA,OAAK5E,UAAWC,EAA0BH,SAAA,EACtCC,EAAAA,EAAAA,KAAC8E,EAAY,CAAA/E,UACT8E,EAAAA,EAAAA,MAAA,OAAA9E,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAiCH,SAAC,uGAChD8E,EAAAA,EAAAA,MAAA,KAAG5E,UAAWC,EAAiCH,SAAA,EAAGoE,EAAoBvD,GAAcgD,QAAQ,GAAIzC,EAAgBH,YAGxHhB,EAAAA,EAAAA,KAAC8E,EAAY,CAAA/E,UACT8E,EAAAA,EAAAA,MAAA,OAAA9E,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAiCH,SAAC,uGAChD8E,EAAAA,EAAAA,MAAA,KAAG5E,UAAWC,EAAiCH,SAAA,EAAGqE,EAAqBxD,GAAcgD,QAAQ,GAAIzC,EAAgBH,YAGzHhB,EAAAA,EAAAA,KAAC8E,EAAY,CAAA/E,UACT8E,EAAAA,EAAAA,MAAA,OAAA9E,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAiCH,SAAC,kEAChD8E,EAAAA,EAAAA,MAAA,KAAG5E,UAAWC,EAAiCH,SAAA,CAAE4E,EAA6B,aAGtF3E,EAAAA,EAAAA,KAAC8E,EAAY,CAAA/E,UACT8E,EAAAA,EAAAA,MAAA,OAAA9E,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAiCH,SAAC,yEAChD8E,EAAAA,EAAAA,MAAA,KAAG5E,UAAWC,EAAiCH,SAAA,CAAEsE,EAAUb,KAAK,KAAGa,EAAUC,WAAW,cAK5G,E,yFCxIA,EAAoC,2CCgIpC,EAxHwB,WACpB,IAAAnE,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7C4E,EAAW1E,EAAA,GAAE2E,EAAc3E,EAAA,GAE5BY,GAAWC,EAAAA,EAAAA,OAEjBmC,EAAAA,EAAAA,YAAU,WACNpC,GAASgE,EAAAA,EAAAA,MACb,GAAG,CAAChE,IAEJ,IAAMiE,GAAgBxE,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,OAAOA,MAAM,IAExD0E,EAAsBD,EAAcE,QAAO,SAACC,EAAOC,GAErD,OAAOD,EADqBC,EAApBrD,MAAoBqD,EAAb5B,QAEnB,GAAG,GAEG6B,EAAeL,EAAcM,KAAI,SAAAF,GAAK,MAAK,CAC7C9B,KAAM8B,EAAM9B,KACZzC,MAAQuE,EAAMrD,MAAQqD,EAAM5B,SAAYyB,EAC3C,IAEKM,GAAaC,EAAAA,EAAAA,GAAaC,EAAAA,GAmDhC,OACI3F,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAyBH,UACrCC,EAAAA,EAAAA,KAAC4F,EAAAA,EAAmB,CAACC,MAAM,OAAOC,OAAO,OAAM/F,UAC3C8E,EAAAA,EAAAA,MAACkB,EAAAA,EAAQ,CAAAhG,SAAA,EACLC,EAAAA,EAAAA,KAACgG,EAAAA,EAAG,CACAC,KAAMV,EACNW,WAAW,EACXC,YAAa,GACbC,YAAa,IACbC,KAAK,UACLC,QAAQ,QACRvB,YAAaA,EACbwB,YAAa,SAACC,GAAK,OA7Db,SAACA,GACvB,IAAMC,EAASC,KAAKC,GAAK,IACjBC,EAC8BJ,EAD9BI,GAAIC,EAC0BL,EAD1BK,GAAIC,EACsBN,EADtBM,SAAUX,EACYK,EADZL,YAAaC,EACDI,EADCJ,YAAaW,EACdP,EADcO,WAAYC,EAC1BR,EAD0BQ,SAC5DX,EAAkCG,EAAlCH,KAAM7D,EAA4BgE,EAA5BhE,QAASyE,EAAmBT,EAAnBS,QAASlG,EAAUyF,EAAVzF,MACtBmG,EAAMR,KAAKQ,KAAKT,EAASK,GACzBK,EAAMT,KAAKS,KAAKV,EAASK,GACzBM,EAAKR,GAAMR,EAAc,IAAMe,EAC/BE,EAAKR,GAAMT,EAAc,IAAMc,EAC/BI,EAAKV,GAAMR,EAAc,IAAMe,EAC/BI,EAAKV,GAAMT,EAAc,IAAMc,EAC/BM,EAAKF,EAA2B,IAArBH,GAAO,EAAI,GAAK,GAC3BM,EAAKF,EACLG,EAAaP,GAAO,EAAI,QAAU,MAExC,OACItC,EAAAA,EAAAA,MAAA,KAAA9E,SAAA,EACIC,EAAAA,EAAAA,KAAA,QAAM2H,EAAGf,EAAIgB,EAAGf,EAAIgB,GAAI,EAAGH,WAAW,SAASrB,KAAMA,EAAKtG,SACrDyC,EAAQgB,QAEbxD,EAAAA,EAAAA,KAAC8H,EAAAA,EAAM,CACHlB,GAAIA,EACJC,GAAIA,EACJV,YAAaA,EACbC,YAAaA,EACbW,WAAYA,EACZC,SAAUA,EACVX,KAAMA,KAEVrG,EAAAA,EAAAA,KAAC8H,EAAAA,EAAM,CACHlB,GAAIA,EACJC,GAAIA,EACJE,WAAYA,EACZC,SAAUA,EACVb,YAAaC,EAAc,EAC3BA,YAAaA,EAAc,GAC3BC,KAAMA,KAEVrG,EAAAA,EAAAA,KAAA,QAAM+H,EAAC,IAAAhF,OAAMqE,EAAE,KAAArE,OAAIsE,EAAE,KAAAtE,OAAIuE,EAAE,KAAAvE,OAAIwE,EAAE,KAAAxE,OAAIyE,EAAE,KAAAzE,OAAI0E,GAAMO,OAAQ3B,EAAMA,KAAK,UACpErG,EAAAA,EAAAA,KAAA,UAAQ4G,GAAIY,EAAIX,GAAIY,EAAIQ,EAAG,EAAG5B,KAAMA,EAAM2B,OAAO,UACjDhI,EAAAA,EAAAA,KAAA,QAAM2H,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GAASS,EAAGH,EAAIC,WAAYA,EAAYrB,KAAK,OAAMtG,SAAA,MAAAgD,QAAmB,IAAVkE,GAAerD,QAAQ,GAAE,QACpHiB,EAAAA,EAAAA,MAAA,QAAM8C,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GAASS,EAAGH,EAAIC,WAAYA,EAAYrB,KAAMA,EAAKtG,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,GAAAgD,QAAoB,IAARhC,GAAa6C,QAAQ,GAAE,QACnC5D,EAAAA,EAAAA,KAAA,SAAO2H,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GAASU,GAAI,GAAG9H,SAAA,IAAAgD,QAAOhC,EAAQoE,GAAqBvB,QAAQ,WAI5G,CAe4CsE,CAAkB1B,EAAM,EAChD2B,aAAc,SAAClC,EAAMmC,GAAK,OAAKpD,EAAeoD,EAAM,EACpDC,aAAc,kBAAMrD,EAAe,KAAK,EAACjF,SAExCwF,EAAaC,KAAI,SAAC8C,EAAOF,GAAK,OAC3BpI,EAAAA,EAAAA,KAACuI,EAAAA,EAAI,CAEDlC,KAAMZ,EAAW2C,IAAO,QAAArF,OADXqF,GAEf,OAGVpI,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CACHC,QAAS,SAACjC,GACN,IAAQhE,EAAYgE,EAAZhE,QACR,OACIxC,EAAAA,EAAAA,KAAA,OAAAD,SACKyC,EAAQgD,KAAI,SAAC8C,EAAOF,GAAK,OACtBvD,EAAAA,EAAAA,MAAA,OAAkC6D,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,aAAc,MAAOC,MAAO,QAAS/I,SAAA,EACnHC,EAAAA,EAAAA,KAAA,OAAK0I,MAAO,CAAE7C,MAAO,OAAQC,OAAQ,OAAQiD,gBAAiBT,EAAMQ,MAAOE,YAAa,UAAgB,GAAAjG,OACpGuF,EAAMvH,MAAK,KAAAgC,QAA2B,IAAtBuF,EAAM9F,QAAQzB,OAAa6C,QAAQ,GAAE,sBAAAb,OAFpCqF,GAGnB,KAItB,EACAa,MAAM,QACNC,cAAc,SACdC,OAAO,WACPC,aAAc,CAAEC,aAAc,iBAMtD,EC9HA,EAAgC,iDAAhC,EAAyF,yCCwBzF,EAnBkC,WAC9B,OACIxE,EAAAA,EAAAA,MAAAyE,EAAAA,SAAA,CAAAvJ,SAAA,EACIC,EAAAA,EAAAA,KAACuJ,EAAkB,KACnB1E,EAAAA,EAAAA,MAAA,OAAK5E,UAAWC,EAAqBH,SAAA,EACjC8E,EAAAA,EAAAA,MAACC,EAAY,CAAA/E,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaH,SAAC,6IAC7BC,EAAAA,EAAAA,KAACwJ,EAAe,QAEpB3E,EAAAA,EAAAA,MAACC,EAAY,CAAA/E,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaH,SAAC,6IAC7BC,EAAAA,EAAAA,KAACwJ,EAAe,YAMpC,C","sources":["webpack://intelinvest/./src/components/ChartWrapper/ChartWrapper.module.scss?9d0c","components/ChartWrapper/ChartWrapper.jsx","webpack://intelinvest/./src/components/AnalyticsDashboard/AnalyticsDashboard.module.scss?5130","components/AnalyticsDashboard/AnalyticsDashboard.jsx","webpack://intelinvest/./src/shared/components/PieChartExample/PieChartExample.module.scss?99aa","shared/components/PieChartExample/PieChartExample.jsx","webpack://intelinvest/./src/components/AnalyticsDashboardWrapper/AnalyticsDashboardWrapper.module.scss?0ad9","components/AnalyticsDashboardWrapper/AnalyticsDashboardWrapper.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chartWrapper__container\":\"ChartWrapper_chartWrapper__container__58pOl\"};","import styles from './ChartWrapper.module.scss'\n\nconst ChartWrapper = ({ children }) => {\n    return (\n        <div className={styles.chartWrapper__container}>{children}</div>\n    )\n};\n\nexport default ChartWrapper;","// extracted by mini-css-extract-plugin\nexport default {\"analyticsDashboard\":\"AnalyticsDashboard_analyticsDashboard__gJ1BH\",\"analyticsDashboard__title\":\"AnalyticsDashboard_analyticsDashboard__title__I7g4G\",\"analyticsDashboard__value\":\"AnalyticsDashboard_analyticsDashboard__value__8o8BS\"};","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectExchangeRate } from 'redux/currencyConverter/currencyConverterSlice';\nimport { fetchStockPrice } from 'redux/stockSuggestions/stockSuggestionsOperations';\n\nimport ChartWrapper from \"components/ChartWrapper/ChartWrapper\";\n\nimport styles from './AnalyticsDashboard.module.scss'\n\nconst AnalyticsDashboard = () => {\n    const [stockPrices, setStockPrices] = useState({});\n\n    const stocks = useSelector(state => state.stocks.stocks);\n    const exchangeRate = useSelector(selectExchangeRate);\n    const selectedCurrency = useSelector(state => state.selectedCurrency.value);\n    const currentCurrency = selectedCurrency ? selectedCurrency : 'USD';\n\n    const dispatch = useDispatch();\n\n    const currencySymbols = useMemo(() => ({\n        USD: '$',\n        EUR: '€',\n        GBP: '£',\n        UAH: '₴'\n    }), []);\n\n    const handleGetPrice = useCallback(async (symbol) => {\n        try {\n            const response = await dispatch(fetchStockPrice(symbol));\n            const price = response.payload;\n            if (price !== null) {\n                setStockPrices((prevPrices) => ({\n                    ...prevPrices,\n                    [symbol]: price,\n                }));\n            }\n        } catch (error) {\n            console.log(`Error getting stock price for ${symbol}:`, error.message);\n        }\n    }, [dispatch, setStockPrices]);\n\n    useEffect(() => {\n        stocks.forEach(({ name }) => {\n            handleGetPrice(name);\n        });\n    }, [stocks, handleGetPrice]);\n\n    const calculateRowValues = useCallback((name, price, quantity) => {\n        const totalPositionValue = (quantity * price).toFixed(2);\n        const currentStockPrice = stockPrices[name] !== undefined ? stockPrices[name] : 0;\n        const currentTotalPositionValue = (quantity * currentStockPrice).toFixed(2);\n        const profitability = (currentTotalPositionValue - totalPositionValue).toFixed(2);\n        const profitabilityPercentage = ((profitability / totalPositionValue) * 100).toFixed(2);\n\n        return {\n            totalPositionValue,\n            currentStockPrice,\n            currentTotalPositionValue,\n            profitability,\n            profitabilityPercentage,\n        };\n    }, [stockPrices]);\n\n    const calculateStocksSummary = useCallback(() => {\n        let totalCurrentValue = 0;\n        let totalProfitability = 0;\n        let totalPositionValue = 0;\n        let bestStock = {\n            name: '',\n            percentage: 0,\n        };\n\n        stocks.forEach(({ name, price, quantity }) => {\n            const {\n                totalPositionValue: rowTotalPositionValue,\n                currentTotalPositionValue,\n                profitability,\n                profitabilityPercentage,\n            } = calculateRowValues(name, price, quantity);\n\n            totalCurrentValue += parseFloat(currentTotalPositionValue);\n            totalProfitability += parseFloat(profitability);\n            totalPositionValue += parseFloat(rowTotalPositionValue);\n\n            if (parseFloat(profitabilityPercentage) > bestStock.percentage) {\n                bestStock = {\n                    name,\n                    percentage: parseFloat(profitabilityPercentage),\n                };\n            }\n        });\n\n        const totalProfitabilityPercentage = ((totalProfitability / totalPositionValue) * 100).toFixed(2);\n\n        return {\n            totalCurrentValue,\n            totalProfitability,\n            totalProfitabilityPercentage,\n            bestStock,\n        };\n    }, [stocks, calculateRowValues]);\n\n    const {\n        totalCurrentValue,\n        totalProfitability,\n        totalProfitabilityPercentage,\n        bestStock,\n    } = calculateStocksSummary();\n\n    return (\n        <div className={styles.analyticsDashboard}>\n            <ChartWrapper>\n                <div>\n                    <p className={styles.analyticsDashboard__title}>Вартість портфелю</p>\n                    <p className={styles.analyticsDashboard__value}>{(totalCurrentValue * exchangeRate).toFixed(2)}{currencySymbols[currentCurrency]}</p>\n                </div>\n            </ChartWrapper>\n            <ChartWrapper>\n                <div>\n                    <p className={styles.analyticsDashboard__title}>Сумарний прибуток</p>\n                    <p className={styles.analyticsDashboard__value}>{(totalProfitability * exchangeRate).toFixed(2)}{currencySymbols[currentCurrency]}</p>\n                </div>\n            </ChartWrapper>\n            <ChartWrapper>\n                <div>\n                    <p className={styles.analyticsDashboard__title}>Дохідність</p>\n                    <p className={styles.analyticsDashboard__value}>{totalProfitabilityPercentage}%</p>\n                </div>\n            </ChartWrapper>\n            <ChartWrapper>\n                <div>\n                    <p className={styles.analyticsDashboard__title}>Кращий актив</p>\n                    <p className={styles.analyticsDashboard__value}>{bestStock.name}: {bestStock.percentage}%</p>\n                </div>\n            </ChartWrapper>\n        </div>\n    );\n}\n\nexport default AnalyticsDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"pieChart__wrapper\":\"PieChartExample_pieChart__wrapper__FKwjq\"};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchStocks } from 'redux/stocks/opetations';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Sector, Legend } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeSet2 } from 'd3-scale-chromatic';\n\nimport styles from './PieChartExample.module.scss'\n\nconst PieChartExample = () => {\n    const [activeIndex, setActiveIndex] = useState(null);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchStocks());\n    }, [dispatch]);\n\n    const fetchedStocks = useSelector(state => state.stocks.stocks);\n\n    const totalSumOfPositions = fetchedStocks.reduce((total, stock) => {\n        const { price, quantity } = stock;\n        return total + price * quantity;\n    }, 0);\n\n    const pieChartData = fetchedStocks.map(stock => ({\n        name: stock.name,\n        value: (stock.price * stock.quantity) / totalSumOfPositions,\n    }));\n\n    const colorScale = scaleOrdinal(schemeSet2);\n\n    const renderActiveShape = (props) => {\n        const RADIAN = Math.PI / 180;\n        const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n            fill, payload, percent, value } = props;\n        const sin = Math.sin(-RADIAN * midAngle);\n        const cos = Math.cos(-RADIAN * midAngle);\n        const sx = cx + (outerRadius + 10) * cos;\n        const sy = cy + (outerRadius + 10) * sin;\n        const mx = cx + (outerRadius + 30) * cos;\n        const my = cy + (outerRadius + 30) * sin;\n        const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n        const ey = my;\n        const textAnchor = cos >= 0 ? 'start' : 'end';\n\n        return (\n            <g>\n                <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n                    {payload.name}\n                </text>\n                <Sector\n                    cx={cx}\n                    cy={cy}\n                    innerRadius={innerRadius}\n                    outerRadius={outerRadius}\n                    startAngle={startAngle}\n                    endAngle={endAngle}\n                    fill={fill}\n                />\n                <Sector\n                    cx={cx}\n                    cy={cy}\n                    startAngle={startAngle}\n                    endAngle={endAngle}\n                    innerRadius={outerRadius + 6}\n                    outerRadius={outerRadius + 10}\n                    fill={fill}\n                />\n                <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n                <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n                <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${(percent * 100).toFixed(2)}%`}</text>\n                <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill={fill}>\n                    <tspan>{`${(value * 100).toFixed(0)}%`}</tspan>\n                    <tspan x={ex + (cos >= 0 ? 1 : -1) * 12} dy={18}>{`$${(value * totalSumOfPositions).toFixed(2)}`}</tspan>\n                </text>\n            </g>\n        );\n    };\n\n\n    return (\n        <div className={styles.pieChart__wrapper}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                    <Pie\n                        data={pieChartData}\n                        labelLine={false}\n                        innerRadius={60}\n                        outerRadius={100}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        activeIndex={activeIndex}\n                        activeShape={(props) => renderActiveShape(props)}\n                        onMouseEnter={(data, index) => setActiveIndex(index)}\n                        onMouseLeave={() => setActiveIndex(null)}\n                    >\n                        {pieChartData.map((entry, index) => (\n                            <Cell\n                                key={`cell-${index}`}\n                                fill={colorScale(index)}\n                            />\n                        ))}\n                    </Pie>\n                    <Legend\n                        content={(props) => {\n                            const { payload } = props;\n                            return (\n                                <div>\n                                    {payload.map((entry, index) => (\n                                        <div key={`legend-item-${index}`} style={{ display: 'flex', alignItems: 'center', marginBottom: '5px', color: '#fff' }}>\n                                            <div style={{ width: '10px', height: '10px', backgroundColor: entry.color, marginRight: '10px' }}></div>\n                                            {`${entry.value} ${(entry.payload.value * 100).toFixed(0)}%`}\n                                        </div>\n                                    ))}\n                                </div>\n                            );\n                        }}\n                        align=\"right\"\n                        verticalAlign=\"middle\"\n                        layout=\"vertical\"\n                        wrapperStyle={{ paddingRight: '200px' }}\n                    />\n                </PieChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nexport default PieChartExample;\n","// extracted by mini-css-extract-plugin\nexport default {\"chartsWrapper\":\"AnalyticsDashboardWrapper_chartsWrapper__i833f\",\"title\":\"AnalyticsDashboardWrapper_title__Ben3v\"};","import AnalyticsDashboard from \"components/AnalyticsDashboard/AnalyticsDashboard\";\nimport ChartWrapper from \"components/ChartWrapper/ChartWrapper\";\nimport PieChartExample from \"shared/components/PieChartExample/PieChartExample\";\n\nimport styles from './AnalyticsDashboardWrapper.module.scss'\n\nconst AnalyticsDashboardWrapper = () => {\n    return (\n        <>\n            <AnalyticsDashboard />\n            <div className={styles.chartsWrapper}>\n                <ChartWrapper>\n                    <h3 className={styles.title}>Склад портфелю по бумагам</h3>\n                    <PieChartExample />\n                </ChartWrapper>\n                <ChartWrapper>\n                    <h3 className={styles.title}>Склад портфелю по бумагам</h3>\n                    <PieChartExample />\n                </ChartWrapper>\n            </div>\n\n        </>\n    )\n}\n\nexport default AnalyticsDashboardWrapper;"],"names":["_ref","children","_jsx","className","styles","_useState","useState","_useState2","_slicedToArray","stockPrices","setStockPrices","stocks","useSelector","state","exchangeRate","selectExchangeRate","selectedCurrency","value","currentCurrency","dispatch","useDispatch","currencySymbols","useMemo","USD","EUR","GBP","UAH","handleGetPrice","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","symbol","response","price","wrap","_context","prev","next","fetchStockPrice","sent","payload","prevPrices","_objectSpread","_defineProperty","t0","console","log","concat","message","stop","_x","apply","arguments","useEffect","forEach","_ref2","name","calculateRowValues","quantity","totalPositionValue","toFixed","currentStockPrice","undefined","currentTotalPositionValue","profitability","profitabilityPercentage","calculateStocksSummary","totalCurrentValue","totalProfitability","bestStock","percentage","_ref3","_calculateRowValues","rowTotalPositionValue","parseFloat","totalProfitabilityPercentage","_calculateStocksSumma","_jsxs","ChartWrapper","activeIndex","setActiveIndex","fetchStocks","fetchedStocks","totalSumOfPositions","reduce","total","stock","pieChartData","map","colorScale","scaleOrdinal","schemeSet2","ResponsiveContainer","width","height","PieChart","Pie","data","labelLine","innerRadius","outerRadius","fill","dataKey","activeShape","props","RADIAN","Math","PI","cx","cy","midAngle","startAngle","endAngle","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","renderActiveShape","onMouseEnter","index","onMouseLeave","entry","Cell","Legend","content","style","display","alignItems","marginBottom","color","backgroundColor","marginRight","align","verticalAlign","layout","wrapperStyle","paddingRight","_Fragment","AnalyticsDashboard","PieChartExample"],"sourceRoot":""}