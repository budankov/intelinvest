{"version":3,"file":"static/js/621.acb1aef1.chunk.js","mappings":"+NAuBA,EAlBgB,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MAEjBC,ECHK,WACL,IAAAC,GAA6BC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAApDC,EAAKJ,EAALI,MAAOC,EAAKL,EAALK,MAAOC,EAAEN,EAAFM,GAChBT,GAAWC,EAAAA,EAAAA,MAuBjB,OArBAS,EAAAA,EAAAA,YAAU,WACR,IAAMC,GAAOC,EAAAA,EAAAA,MACPC,GAAcC,EAAAA,EAAAA,IAAmBH,GAAM,SAAAL,GAEzCN,EADEM,GAEAS,EAAAA,EAAAA,IAAQ,CACNR,MAAOD,EAAKC,MACZE,GAAIH,EAAKU,IACTR,MAAOF,EAAKW,eAIPC,EAAAA,EAAAA,MAEb,IAEA,OAAO,WACLL,GACF,CACF,GAAG,CAACb,IAEG,CACLmB,SAAUZ,EACVA,MAAAA,EACAC,MAAAA,EACAC,GAAAA,EAEJ,CD5B4BW,GAAlBD,EAAMjB,EAANiB,OAAQZ,EAAKL,EAALK,MAGhB,OAFAc,QAAQC,IAAI,SAAUH,GAEfA,GACLI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yHACJF,EAAAA,EAAAA,MAAA,UAAQI,QAAS,kBAAM3B,GAASkB,EAAAA,EAAAA,MAAa,EAACO,SAAA,CAAC,gBAC/BlB,SAIlBmB,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAG,KAEjB,C","sources":["pages/AppPage.jsx","shared/hooks/useAuth.js"],"sourcesContent":["import { Navigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from '../shared/hooks/useAuth';\nimport { removeUser } from 'redux/auth/userSlice';\n\nconst AppPage = () => {\n  const dispatch = useDispatch();\n\n  const { isAuth, email } = useAuth();\n  console.log('isAuth', isAuth);\n\n  return isAuth ? (\n    <div className=\"container\">\n      <h2>Персональна сторінка</h2>\n      <button onClick={() => dispatch(removeUser())}>\n        Log out from {email}\n      </button>\n    </div>\n  ) : (\n    <Navigate to=\"/\" />\n  );\n};\n\nexport default AppPage;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser, removeUser } from 'redux/auth/userSlice';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\n\nexport function useAuth() {\n  const { email, token, id } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const auth = getAuth();\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        dispatch(\n          setUser({\n            email: user.email,\n            id: user.uid,\n            token: user.accessToken,\n          })\n        );\n      } else {\n        dispatch(removeUser());\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [dispatch]);\n\n  return {\n    isAuth: !!email,\n    email,\n    token,\n    id,\n  };\n}\n"],"names":["dispatch","useDispatch","_useAuth","_useSelector","useSelector","state","user","email","token","id","useEffect","auth","getAuth","unsubscribe","onAuthStateChanged","setUser","uid","accessToken","removeUser","isAuth","useAuth","console","log","_jsxs","className","children","_jsx","onClick","Navigate","to"],"sourceRoot":""}