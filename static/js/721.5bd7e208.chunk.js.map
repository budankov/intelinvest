{"version":3,"file":"static/js/721.5bd7e208.chunk.js","mappings":"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","sources":["webpack://intelinvest/./src/components/ChartWrapper/ChartWrapper.module.scss?9d0c","components/ChartWrapper/ChartWrapper.jsx","webpack://intelinvest/./src/shared/components/PieChartExample/PieChartExample.module.scss?99aa","shared/components/PieChartExample/PieChartExample.jsx","webpack://intelinvest/./src/components/AnalyticsDashboard/AnalyticsDashboard.module.scss?5130","components/AnalyticsDashboard/AnalyticsDashboard.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chartWrapper__container\":\"ChartWrapper_chartWrapper__container__58pOl\"};","import styles from './ChartWrapper.module.scss'\n\nconst ChartWrapper = ({ children }) => {\n    return (\n        <div className={styles.chartWrapper__container}>{children}</div>\n    )\n};\n\nexport default ChartWrapper;","// extracted by mini-css-extract-plugin\nexport default {\"pieChart__wrapper\":\"PieChartExample_pieChart__wrapper__FKwjq\"};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchStocks } from 'redux/stocks/opetations';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Sector, Legend } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeSet2 } from 'd3-scale-chromatic';\n\nimport styles from './PieChartExample.module.scss'\n\n\n\nconst PieChartExample = () => {\n    const [activeIndex, setActiveIndex] = useState(null);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchStocks());\n    }, [dispatch]);\n\n    const fetchedStocks = useSelector(state => state.stocks.stocks);\n\n    const totalSumOfPositions = fetchedStocks.reduce((total, stock) => {\n        const { price, quantity } = stock;\n        return total + price * quantity;\n    }, 0);\n\n    const pieChartData = fetchedStocks.map(stock => ({\n        name: stock.name,\n        value: (stock.price * stock.quantity) / totalSumOfPositions,\n    }));\n\n    const colorScale = scaleOrdinal(schemeSet2);\n\n    const renderActiveShape = (props) => {\n        const RADIAN = Math.PI / 180;\n        const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n            fill, payload, percent, value } = props;\n        const sin = Math.sin(-RADIAN * midAngle);\n        const cos = Math.cos(-RADIAN * midAngle);\n        const sx = cx + (outerRadius + 10) * cos;\n        const sy = cy + (outerRadius + 10) * sin;\n        const mx = cx + (outerRadius + 30) * cos;\n        const my = cy + (outerRadius + 30) * sin;\n        const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n        const ey = my;\n        const textAnchor = cos >= 0 ? 'start' : 'end';\n\n        return (\n            <g>\n                <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n                    {payload.name}\n                </text>\n                <Sector\n                    cx={cx}\n                    cy={cy}\n                    innerRadius={innerRadius}\n                    outerRadius={outerRadius}\n                    startAngle={startAngle}\n                    endAngle={endAngle}\n                    fill={fill}\n                />\n                <Sector\n                    cx={cx}\n                    cy={cy}\n                    startAngle={startAngle}\n                    endAngle={endAngle}\n                    innerRadius={outerRadius + 6}\n                    outerRadius={outerRadius + 10}\n                    fill={fill}\n                />\n                <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n                <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n                <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${(percent * 100).toFixed(2)}%`}</text>\n                <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill={fill}>\n                    <tspan>{`${(value * 100).toFixed(0)}%`}</tspan>\n                    <tspan x={ex + (cos >= 0 ? 1 : -1) * 12} dy={18}>{`$${(value * totalSumOfPositions).toFixed(2)}`}</tspan>\n                </text>\n            </g>\n        );\n    };\n\n\n    return (\n        <div className={styles.pieChart__wrapper}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                    <Pie\n                        data={pieChartData}\n                        labelLine={false}\n                        innerRadius={60}\n                        outerRadius={100}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        activeIndex={activeIndex}\n                        activeShape={(props) => renderActiveShape(props)}\n                        onMouseEnter={(data, index) => setActiveIndex(index)}\n                        onMouseLeave={() => setActiveIndex(null)}\n                    >\n                        {pieChartData.map((entry, index) => (\n                            <Cell\n                                key={`cell-${index}`}\n                                fill={colorScale(index)}\n                            />\n                        ))}\n                    </Pie>\n                    <Legend\n                        content={(props) => {\n                            const { payload } = props;\n                            return (\n                                <div>\n                                    {payload.map((entry, index) => (\n                                        <div key={`legend-item-${index}`} style={{ display: 'flex', alignItems: 'center', marginBottom: '5px', color: '#fff' }}>\n                                            <div style={{ width: '10px', height: '10px', backgroundColor: entry.color, marginRight: '10px' }}></div>\n                                            {`${entry.value} ${(entry.payload.value * 100).toFixed(0)}%`}\n                                        </div>\n                                    ))}\n                                </div>\n                            );\n                        }}\n                        align=\"right\"\n                        verticalAlign=\"middle\"\n                        layout=\"vertical\"\n                        wrapperStyle={{ paddingRight: '200px' }}\n                    />\n                </PieChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nexport default PieChartExample;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"AnalyticsDashboard_title__HtLJM\"};","import ChartWrapper from \"components/ChartWrapper/ChartWrapper\";\nimport PieChartExample from \"shared/components/PieChartExample/PieChartExample\";\n\nimport styles from './AnalyticsDashboard.module.scss'\n\nconst AnalyticsDashboard = () => {\n    return (\n        <ChartWrapper>\n            <h3 className={styles.title}>Склад портфелю по бумагам</h3>\n            <PieChartExample />\n        </ChartWrapper>\n    )\n}\n\nexport default AnalyticsDashboard;"],"names":["_ref","children","_jsx","className","styles","_useState","useState","_useState2","_slicedToArray","activeIndex","setActiveIndex","dispatch","useDispatch","useEffect","fetchStocks","fetchedStocks","useSelector","state","stocks","totalSumOfPositions","reduce","total","stock","price","quantity","pieChartData","map","name","value","colorScale","scaleOrdinal","schemeSet2","ResponsiveContainer","width","height","_jsxs","PieChart","Pie","data","labelLine","innerRadius","outerRadius","fill","dataKey","activeShape","props","RADIAN","Math","PI","cx","cy","midAngle","startAngle","endAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","concat","stroke","r","toFixed","renderActiveShape","onMouseEnter","index","onMouseLeave","entry","Cell","Legend","content","style","display","alignItems","marginBottom","color","backgroundColor","marginRight","align","verticalAlign","layout","wrapperStyle","paddingRight","ChartWrapper","PieChartExample"],"sourceRoot":""}