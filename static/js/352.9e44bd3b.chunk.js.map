{"version":3,"file":"static/js/352.9e44bd3b.chunk.js","mappings":"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","sources":["../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/toDate/index.js","webpack://intelinvest/./src/components/Tariffs/Tariffs.module.scss?bcef","components/Tariffs/Tariffs.jsx","../node_modules/date-fns/esm/addYears/index.js"],"sourcesContent":["export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","// extracted by mini-css-extract-plugin\nexport default {\"tariffsWrapper\":\"Tariffs_tariffsWrapper__UXCr5\"};","import React, { useState } from 'react';\nimport { addMonths, addYears } from 'date-fns';\nimport { useDispatch } from 'react-redux';\nimport { changeTariffsPlan } from 'redux/tariffsPlan/tariffsPlanOperations';\n\nimport styles from './Tariffs.module.scss';\n\nconst Tariffs = () => {\n    const today = new Date();\n    const nextMonth = addMonths(today, 1);\n    const nextYear = addYears(today, 1);\n\n    const [subscription, setSubscription] = useState({\n        typeSubscription: 'base', // Тип підписки за замовчуванням\n        startSubscription: today, // Початок підписки за замовчуванням (сьогодні)\n        endSubscription: 'unlimited', // Кінець підписки за замовчуванням (необмежений)\n    });\n\n    const dispatch = useDispatch();\n\n    // Функція для обробки зміни типу підписки\n    const handleSubscriptionChange = (event) => {\n        const { value } = event.target;\n\n        // Якщо обрано \"unlimited\", то змінюємо тип підписки на \"advanced\"\n        if (value === 'unlimited') {\n            setSubscription((prevSubscription) => ({\n                ...prevSubscription,\n                typeSubscription: 'advanced',\n            }));\n        } else {\n            setSubscription((prevSubscription) => ({\n                ...prevSubscription,\n                typeSubscription: value,\n            }));\n        }\n    };\n\n    // Функція для обробки зміни тривалості підписки\n    const handleDurationChange = (event) => {\n        const { value } = event.target;\n        let endSubscription;\n\n        // Встановлюємо кінець підписки відповідно до обраної тривалості\n        if (value === 'month') {\n            endSubscription = nextMonth;\n        } else if (value === 'year') {\n            endSubscription = nextYear;\n        } else {\n            endSubscription = 'unlimited'; // Тривалість \"unlimited\"\n        }\n\n        setSubscription((prevSubscription) => ({\n            ...prevSubscription,\n            endSubscription,\n        }));\n    };\n\n    // Функція для обробки натискання на кнопку \"Підписатись\"\n    const handleSubscribe = () => {\n        // Відправляємо дані підписки до Redux\n        dispatch(\n            changeTariffsPlan({\n                typeSubscription: subscription.typeSubscription,\n                startSubscription: subscription.startSubscription,\n                endSubscription: subscription.endSubscription,\n            })\n        );\n    };\n\n    return (\n        <div className={styles.tariffsWrapper}>\n            <h2>Тарифи</h2>\n            <div>\n                <h3>Виберіть тип підписки</h3>\n                <label>\n                    <input\n                        type=\"radio\"\n                        value=\"base\"\n                        checked={subscription.typeSubscription === 'base'}\n                        onChange={handleSubscriptionChange}\n                    />\n                    Базовий\n                </label>\n                <label>\n                    <input\n                        type=\"radio\"\n                        value=\"standart\"\n                        checked={subscription.typeSubscription === 'standart'}\n                        onChange={handleSubscriptionChange}\n                    />\n                    Стандарт\n                </label>\n                <label>\n                    <input\n                        type=\"radio\"\n                        value=\"advanced\"\n                        checked={subscription.typeSubscription === 'advanced'}\n                        onChange={handleSubscriptionChange}\n                    />\n                    Розширений\n                </label>\n                <label>\n                    <input\n                        type=\"radio\"\n                        value=\"unlimited\"\n                        checked={subscription.typeSubscription === 'unlimited'}\n                        onChange={handleSubscriptionChange}\n                    />\n                    Необмежений\n                </label>\n            </div>\n\n            <div>\n                <h3>Виберіть тривалість підписки</h3>\n                <label>\n                    <input\n                        type=\"radio\"\n                        value=\"month\"\n                        checked={subscription.endSubscription === nextMonth}\n                        onChange={handleDurationChange}\n                    />\n                    1 місяць\n                </label>\n                <label>\n                    <input\n                        type=\"radio\"\n                        value=\"year\"\n                        checked={subscription.endSubscription === nextYear}\n                        onChange={handleDurationChange}\n                    />\n                    1 рік\n                </label>\n                <label>\n                    <input\n                        type=\"radio\"\n                        value=\"unlimited\"\n                        checked={subscription.endSubscription === 'unlimited'}\n                        onChange={handleDurationChange}\n                    />\n                    Назавжди\n                </label>\n            </div>\n\n            <button onClick={handleSubscribe}>Підписатись</button>\n        </div>\n    );\n};\n\nexport default Tariffs;\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}"],"names":["toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","requiredArgs","required","args","length","TypeError","addMonths","dirtyDate","dirtyAmount","arguments","date","argument","argStr","Object","prototype","toString","call","Date","_typeof","getTime","console","warn","Error","stack","toDate","amount","dayOfMonth","getDate","endOfDesiredMonth","setMonth","getMonth","setFullYear","getFullYear","today","nextMonth","nextYear","addYears","_useState","useState","typeSubscription","startSubscription","endSubscription","_useState2","_slicedToArray","subscription","setSubscription","dispatch","useDispatch","handleSubscriptionChange","event","value","target","prevSubscription","_objectSpread","handleDurationChange","_jsxs","className","styles","children","_jsx","type","checked","onChange","onClick","changeTariffsPlan"],"sourceRoot":""}